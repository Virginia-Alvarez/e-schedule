[{"/Users/vir/proyectos-personales/e-schedule/web/src/index.js":"1","/Users/vir/proyectos-personales/e-schedule/web/src/components/App.js":"2","/Users/vir/proyectos-personales/e-schedule/web/src/components/Login.js":"3","/Users/vir/proyectos-personales/e-schedule/web/src/components/Day.js":"4","/Users/vir/proyectos-personales/e-schedule/web/src/components/Preview.js":"5","/Users/vir/proyectos-personales/e-schedule/web/src/components/Footer.js":"6","/Users/vir/proyectos-personales/e-schedule/web/src/components/Week.js":"7","/Users/vir/proyectos-personales/e-schedule/web/src/components/Landing.js":"8","/Users/vir/proyectos-personales/e-schedule/web/src/components/Month.js":"9","/Users/vir/proyectos-personales/e-schedule/web/src/components/Header.js":"10","/Users/vir/proyectos-personales/e-schedule/web/src/services/api-doctor.js":"11","/Users/vir/proyectos-personales/e-schedule/web/src/components/SignUp.js":"12","/Users/vir/proyectos-personales/e-schedule/web/src/services/api-treatments.js":"13","/Users/vir/proyectos-personales/e-schedule/web/src/utils/utils.js":"14","/Users/vir/proyectos-personales/e-schedule/web/src/hooks/IsUserAuthenticated.js":"15","/Users/vir/proyectos-personales/e-schedule/web/src/services/localstorage.js":"16","/Users/vir/proyectos-personales/e-schedule/web/src/components/Details.js":"17"},{"size":276,"mtime":1676628884058,"results":"18","hashOfConfig":"19"},{"size":3372,"mtime":1678830437593,"results":"20","hashOfConfig":"19"},{"size":2026,"mtime":1676655112398,"results":"21","hashOfConfig":"19"},{"size":1377,"mtime":1678830408438,"results":"22","hashOfConfig":"19"},{"size":1515,"mtime":1679050047677,"results":"23","hashOfConfig":"19"},{"size":189,"mtime":1675252638388,"results":"24","hashOfConfig":"19"},{"size":2252,"mtime":1679000460481,"results":"25","hashOfConfig":"19"},{"size":1053,"mtime":1679479294888,"results":"26","hashOfConfig":"19"},{"size":762,"mtime":1678483847729,"results":"27","hashOfConfig":"19"},{"size":970,"mtime":1678975480803,"results":"28","hashOfConfig":"19"},{"size":978,"mtime":1676655268355,"results":"29","hashOfConfig":"19"},{"size":1828,"mtime":1676655207284,"results":"30","hashOfConfig":"19"},{"size":678,"mtime":1679001359312,"results":"31","hashOfConfig":"19"},{"size":556,"mtime":1678485155051,"results":"32","hashOfConfig":"19"},{"size":381,"mtime":1677796692911,"results":"33","hashOfConfig":"19"},{"size":1601,"mtime":1677753572290,"results":"34","hashOfConfig":"19"},{"size":1456,"mtime":1678830290246,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rvh2pr",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"/Users/vir/proyectos-personales/e-schedule/web/src/index.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/components/App.js",["93","94"],[],"import '../styles/App.scss';\nimport {Routes, Route, useNavigate} from 'react-router-dom';\nimport { useState} from 'react';\nimport ls from '../services/localstorage';\nimport Login from './Login';\nimport Landing from './Landing';\nimport Preview from './Preview';\nimport Day from './Day';\nimport Week from './Week';\nimport Month from './Month';\nimport Details from './Details';\n\n//services\nimport apiDoctor from '../services/api-doctor';\n\nimport { getFormatedDate } from '../utils/utils';\n\nfunction App() {\n  const navigate = useNavigate();\n  // VARIABLES ESTADO\n  const [date, setDate] = useState(getFormatedDate());\n  const [doctorId, setDoctorId] = useState('');\n \n  //login\n  const [loginErrorMessage, setLoginErrorMessage] = useState('');\n   //sign up\n   const [signUpErrorMessage, setSignUpErrorMessage] = useState('');\n\n  // USEEFFECT ?\n  const sendLoginToApi = loginData =>{\n    setLoginErrorMessage('');\n    const doctor =ls.get('doctor');\n    if (!doctor){\n      apiDoctor.sendLoginToApi(loginData).then(response =>{\n        if (response.success ===true){\n          setDoctorId (response);\n          ls.set('doctor',response);  \n          navigate('/previews');\n        }else {\n          setLoginErrorMessage(response.errorMessage);\n        }\n      });\n    }else {\n      setDoctorId (doctor.doctorId);\n      navigate('/previews');\n    }\n  };\n\n  const sendSignupToApi = signUpData =>{\n    setLoginErrorMessage('');\n    apiDoctor.sendSingUpToApi(signUpData).then(response =>{\n      if (response.success ===true){\n        setDoctorId (response.doctorId);\n        \n        navigate('/previews');\n      }else {\n        setSignUpErrorMessage(response.errorMessage);\n      }\n    });\n  };\n\n\n  // FUNCIONES HANDLER\n\n  const handleDate=(value)=>{\n    setDate(value)\n  };\n\n  const handleAllTreatments = data => {\n    if (data.key === 'doctor') {\n      setDoctorId(data.value);\n    } else if (data.key === 'date') {\n      setDate(data.value);\n    }\n  };\n\n \n\n  // FUNCIONES Y VARIABLES QUE AYUDEN A RENDERIZAR HTML\n\n  // HTML EN EL RETURN\n\n  return (\n    <div className=\"app\">\n        <main>\n          <Routes>\n            \n            <Route\n              path='/login'\n              element= {\n                <Login loginErrorMessage={loginErrorMessage} signUpErrorMessage={signUpErrorMessage} sendLoginToApi={sendLoginToApi} sendSignupToApi={sendSignupToApi}/>\n              }\n            />\n            <Route\n              path='/previews'\n              element= {\n                <Preview date={date}/>\n              }\n            />\n            <Route\n              path='/day'\n              element= {\n                <Day date={date}/>\n              }\n            />\n             <Route\n              path='/treatments/:treatmentId'\n              element= {\n                <Details />\n              }\n            />\n            <Route\n              path='/week'\n              element= {\n                <Week date={date}/>\n              }\n            />\n            <Route\n              path='/month'\n              element= {\n                <Month\n                  date = {date}\n                  handleDate = {handleDate}\n                />\n              }\n            />\n            <Route exact path='/'\n              element= {\n                <Landing/>\n              }\n            />\n          </Routes>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/vir/proyectos-personales/e-schedule/web/src/components/Login.js",["95"],[],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Footer from './Footer';\nimport SignUp from './SignUp';\n\nconst Login = (props) =>{\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    //events\n    \n    const handleEmail = ev =>{\n        setEmail (ev.target.value);\n    }\n\n    const handlePassword = ev =>{\n        setPassword (ev.target.value);\n    }\n\n    const handleForm = ev =>{\n        ev.preventDefault();\n        props.sendLoginToApi({\n            email: email,\n            password: password\n        });\n    }\n\n      const renderErrorMessage = () => {\n    // Si el API ha devuelto un error, App lo guarda en su estado y nos lo pasa por props\n    if (props.loginErrorMessage !== '') {\n      return (\n        <p className=\"error-message\">\n          Error en el login: <span className=\"\">{props.loginErrorMessage}</span>\n        </p>\n      );\n    }\n  };\n\n    return(\n        \n        <div className=\"loginContainer\">\n            <div className=\"step2\">\n                <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\"/>\n                    <div className=\"login\">\n                        <form method=\"post\" onSubmit = {handleForm}>\n                            <label htmlFor=\"chk\" aria-hidden=\"true\">Login</label>\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" id=\"email\" value ={email} onChange = {handleEmail} required=\"\"/>\n                            <input type=\"password\" name=\"pswd\" placeholder=\"Password\" id=\"password\" value={password} onChange={handlePassword} required=\"\"/>\n                            <input className=\"button\" type=\"submit\" value=\"Login\" />\n                            {renderErrorMessage()}\n                        </form>\n                    </div>\n                    <SignUp sendSignupToApi={props.sendSignupToApi} signUpErrorMessage={props.signUpErrorMessage}/>\n            </div>\n            <Footer/>\n        </div>\n        \n    \n        )\n};\n\nexport default Login;","/Users/vir/proyectos-personales/e-schedule/web/src/components/Day.js",["96"],[],"import Header from './Header';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport treatmentApi from '../services/api-treatments';\nimport IsUserAuthenticated from '../hooks/IsUserAuthenticated';\n\nconst Day = (props)=>{\n    const [treatments, setTreatments] = useState ([]);\n    const auth = IsUserAuthenticated();\n    useEffect(() => {\n        const doctor = auth();\n        if(doctor) {\n            treatmentApi.getTreatmentsFromApi(doctor.doctorId, props.date).then(response => {\n            setTreatments(response);\n            });\n        }\n      }, [props.doctorId, props.date, props]);\n\n    const renderTreatments = () => {\n        return treatments.map((treatment) => {\n            return (\n                <section className='section-hour'>\n                    <p className=\"info\">{treatment.date}</p>\n                    <p className=\"info\">{treatment.hour}</p>\n                    <p className=\"info\">{treatment.description}</p>\n                    <Link to ={`/treatments/${treatment.id}`}>Ver Tratamiento</Link>\n                </section>\n            );\n        });\n    }\n    return(\n        <>\n        <Header/>\n        <article className='mainSchedule'>\n            <h1 className='title-schedule'>Día {props.date}</h1>\n            {renderTreatments()}\n        </article>\n    </>            \n\n\n    )\n}\n\nexport default Day;","/Users/vir/proyectos-personales/e-schedule/web/src/components/Preview.js",["97"],[],"import Header from './Header';\nimport { useEffect, useState } from 'react';\nimport treatmentApi from '../services/api-treatments';\nimport IsUserAuthenticated from '../hooks/IsUserAuthenticated';\nimport iconTreatment from '../images/corazon2.png';\n\nconst Preview = (props) =>{\n    //Treatments\n    const [treatments, setTreatments] = useState ([]);\n    const MAX_SIZE_PREVIEW = 3;\n\n    const auth = IsUserAuthenticated();\n\n    useEffect(() => {\n        const doctor = auth();\n        if(doctor) {\n            treatmentApi.getTreatmentsFromApi(doctor.doctorId, props.date, MAX_SIZE_PREVIEW).then(response => {\n            setTreatments(response);\n            });\n        }\n      }, [props.date, props]);\n\n    const renderTreatments = () => {\n        return treatments.map((treatment, index) => {\n            return (\n                <section className='section-hour'>\n                    <div className='box-hour'>\n                        <img className=\"icon-detail\" src={iconTreatment} alt=\"corazon\" />\n                        <p className=\"hour\">{treatment.hour}</p>\n                    </div>\n                    <p className=\"info\">{treatment.description}</p>\n                </section>\n            );\n        });\n    }\n\n    return(\n        <>\n            <Header/>\n            <article className='mainSchedule'>\n                <h1 className='title-schedule'>Próximas consultas</h1>\n                {renderTreatments()}\n            </article>\n        </>                       \n    )\n}\n\nexport default Preview;","/Users/vir/proyectos-personales/e-schedule/web/src/components/Footer.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/components/Week.js",["98","99"],[],"import Header from './Header';\nimport { useEffect, useState } from 'react';\nimport treatmentsApi from '../services/api-treatments';\nimport IsUserAuthenticated from '../hooks/IsUserAuthenticated';\nimport { getCurrentWeek } from '../utils/utils';\n\nconst Week=(props)=>{\n    const [treatments, setTreatments] = useState ([]);\n    const [selectedDate, setSelectedDate] = useState (new Date().getDay());\n    const auth = IsUserAuthenticated();\n    useEffect(() => {\n        const doctor = auth();\n        if(doctor) {\n            retrieveTreatmenst(doctor);\n        }\n      }, [props.doctorId, props.date, props]);\n\n    const retrieveTreatmenst = async (doctor) => {\n        const week = getCurrentWeek();\n        const treatments = [];\n        for(let day in week){\n            await treatmentsApi.getTreatmentsFromApi(doctor.doctorId, week[day]).then(response => {\n                treatments.push(response);\n            });\n        }\n        setTreatments(treatments);\n    }  \n\n    const handleSelectedDate = (ev) => {\n        const date =  ev.target.getAttribute(\"data-id\");\n        setSelectedDate(date);\n    }\n\n    const renderTreatments = (day) => {\n        return treatments[day - 1]?.map((treatment) => {\n            return (\n                <section className='section-hour'>\n                    <p className=\"info\">{treatment.date}</p>\n                    <p className=\"info\">{treatment.hour}</p>\n                    <p className=\"info\">{treatment.description}</p>\n                </section>\n            );\n        });\n    }\n    return(\n        <>\n        <Header/>\n        <nav className='nav-week'>\n            <button onClick={handleSelectedDate} data-id=\"1\" href=\"\">Lunes</button>\n            <button onClick={handleSelectedDate} data-id=\"2\" href=\"\">Martes</button>    \n            <button onClick={handleSelectedDate} data-id=\"3\" href=\"\">Miércoles</button>\n            <button onClick={handleSelectedDate} data-id=\"4\" href=\"\">Jueves</button>\n            <button onClick={handleSelectedDate} data-id=\"5\" href=\"\">Viernes</button>\n        </nav>\n         <article className='mainSchedule'>\n            <h1 className='title-schedule'></h1>\n            {renderTreatments(selectedDate)}\n        </article>\n        </>\n    )\n}\n\nexport default Week;","/Users/vir/proyectos-personales/e-schedule/web/src/components/Landing.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/components/Month.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/components/Header.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/services/api-doctor.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/components/SignUp.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/services/api-treatments.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/utils/utils.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/hooks/IsUserAuthenticated.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/services/localstorage.js",[],[],"/Users/vir/proyectos-personales/e-schedule/web/src/components/Details.js",["100"],[],"import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport treatmentsApi from '../services/api-treatments';\nimport IsUserAuthenticated from '../hooks/IsUserAuthenticated';\nimport Header from './Header';\n\nconst Details = (props) =>{\n    const {treatmentId} = useParams();\n    const [treatments, setTreatments] = useState ([]);\n    const auth = IsUserAuthenticated();\n    useEffect(() => {\n        const doctor = auth();\n        if(doctor) {\n            treatmentsApi.getTreatmentDetailFromApi(doctor.doctorId, treatmentId).then(response => {\n            setTreatments(response);\n            });\n        }\n      }, [treatmentId]);\n\n    const renderTreatments = () => {\n        return treatments.map((treatment) => {\n            return (\n                <section className='section-hour'>\n                    <p className=\"info\">{treatment.date}</p>\n                    <p className=\"info\">{treatment.hour}</p>\n                    <p className=\"info\">{treatment.description}</p>\n                    <p className=\"info\">{treatment.cabinet}</p>\n                    <p className=\"info\">{treatment.observation}</p>\n                </section>\n            );\n        });\n    }\n    return(\n        <>\n            <Header />\n            <section className='mainSchedule'   >\n                <h1>Detalle del tratamiento</h1>\n                {renderTreatments()}\n            </section>\n        </>\n    )\n}\n\nexport default Details;",{"ruleId":"101","severity":1,"message":"102","line":22,"column":10,"nodeType":"103","messageId":"104","endLine":22,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":69,"column":9,"nodeType":"103","messageId":"104","endLine":69,"endColumn":28},{"ruleId":"101","severity":1,"message":"106","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":17,"column":10,"nodeType":"109","endLine":17,"endColumn":45,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":21,"column":10,"nodeType":"109","endLine":21,"endColumn":29,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":16,"column":10,"nodeType":"109","endLine":16,"endColumn":45,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":56,"column":13,"nodeType":"115","endLine":56,"endColumn":44},{"ruleId":"107","severity":1,"message":"108","line":18,"column":10,"nodeType":"109","endLine":18,"endColumn":23,"suggestions":"116"},"no-unused-vars","'doctorId' is assigned a value but never used.","Identifier","unusedVar","'handleAllTreatments' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["117"],["118"],["119"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["120"],{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"121","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [props.doctorId, props.date, props, auth]",{"range":"128","text":"129"},"Update the dependencies array to be: [props.date, props, auth]",{"range":"130","text":"131"},{"range":"132","text":"129"},"Update the dependencies array to be: [auth, treatmentId]",{"range":"133","text":"134"},[595,630],"[props.doctorId, props.date, props, auth]",[680,699],"[props.date, props, auth]",[572,607],[652,665],"[auth, treatmentId]"]