{"ast":null,"code":"var _jsxFileName = \"/Users/vir/proyectos-personales/e-schedule/web/src/components/Week.js\",\n  _s = $RefreshSig$();\nimport Header from './Header';\nimport { useEffect, useState } from 'react';\nimport treatmentsApi from '../services/api-treatments';\nimport IsUserAuthenticated from '../hooks/IsUserAuthenticated';\nimport { getCurrentWeek } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Week = props => {\n  _s();\n  const [treatments, setTreatments] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().getDay());\n  const auth = IsUserAuthenticated();\n  useEffect(() => {\n    const doctor = auth();\n    if (doctor) {\n      retrieveTreatmenst(doctor);\n    }\n  }, [props.doctorId, props.date, props]);\n  const retrieveTreatmenst = async doctor => {\n    const week = getCurrentWeek();\n    const treatments = [];\n    for (let day in week) {\n      await getTreatmentsFromApi(doctor.doctorId, week[day]).then(response => {\n        treatments.push(response);\n      });\n    }\n    setTreatments(treatments);\n  };\n  const handleSelectedDate = ev => {\n    const date = ev.target.getAttribute(\"data-id\");\n    setSelectedDate(date);\n  };\n  const renderTreatments = day => {\n    var _treatments;\n    return (_treatments = treatments[day - 1]) === null || _treatments === void 0 ? void 0 : _treatments.map(treatment => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-hour\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: treatment.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: treatment.hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: treatment.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav-week\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectedDate,\n        \"data-id\": \"1\",\n        href: \"\",\n        children: \"Lunes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectedDate,\n        \"data-id\": \"2\",\n        href: \"\",\n        children: \"Martes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectedDate,\n        \"data-id\": \"3\",\n        href: \"\",\n        children: \"Mi\\xE9rcoles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectedDate,\n        \"data-id\": \"4\",\n        href: \"\",\n        children: \"Jueves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectedDate,\n        \"data-id\": \"5\",\n        href: \"\",\n        children: \"Viernes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"mainSchedule\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), renderTreatments(selectedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(Week, \"6VR8K/JwTQL7BRrDdxd+Mhvjcno=\");\n_c = Week;\nexport default Week;\nvar _c;\n$RefreshReg$(_c, \"Week\");","map":{"version":3,"names":["Header","useEffect","useState","treatmentsApi","IsUserAuthenticated","getCurrentWeek","Week","props","treatments","setTreatments","selectedDate","setSelectedDate","Date","getDay","auth","doctor","retrieveTreatmenst","doctorId","date","week","day","getTreatmentsFromApi","then","response","push","handleSelectedDate","ev","target","getAttribute","renderTreatments","map","treatment","hour","description"],"sources":["/Users/vir/proyectos-personales/e-schedule/web/src/components/Week.js"],"sourcesContent":["import Header from './Header';\nimport { useEffect, useState } from 'react';\nimport treatmentsApi from '../services/api-treatments';\nimport IsUserAuthenticated from '../hooks/IsUserAuthenticated';\nimport { getCurrentWeek } from '../utils/utils';\n\nconst Week=(props)=>{\n    const [treatments, setTreatments] = useState ([]);\n    const [selectedDate, setSelectedDate] = useState (new Date().getDay());\n    const auth = IsUserAuthenticated();\n    useEffect(() => {\n        const doctor = auth();\n        if(doctor) {\n            retrieveTreatmenst(doctor);\n        }\n      }, [props.doctorId, props.date, props]);\n\n    const retrieveTreatmenst = async (doctor) => {\n        const week = getCurrentWeek();\n        const treatments = [];\n        for(let day in week){\n            await getTreatmentsFromApi(doctor.doctorId, week[day]).then(response => {\n                treatments.push(response);\n            });\n        }\n        setTreatments(treatments);\n    }  \n\n    const handleSelectedDate = (ev) => {\n        const date =  ev.target.getAttribute(\"data-id\");\n        setSelectedDate(date);\n    }\n\n    const renderTreatments = (day) => {\n        return treatments[day - 1]?.map((treatment) => {\n            return (\n                <section className='section-hour'>\n                    <p className=\"info\">{treatment.date}</p>\n                    <p className=\"info\">{treatment.hour}</p>\n                    <p className=\"info\">{treatment.description}</p>\n                </section>\n            );\n        });\n    }\n    return(\n        <>\n        <Header/>\n        <nav className='nav-week'>\n            <button onClick={handleSelectedDate} data-id=\"1\" href=\"\">Lunes</button>\n            <button onClick={handleSelectedDate} data-id=\"2\" href=\"\">Martes</button>    \n            <button onClick={handleSelectedDate} data-id=\"3\" href=\"\">Mi√©rcoles</button>\n            <button onClick={handleSelectedDate} data-id=\"4\" href=\"\">Jueves</button>\n            <button onClick={handleSelectedDate} data-id=\"5\" href=\"\">Viernes</button>\n        </nav>\n         <article className='mainSchedule'>\n            <h1 className='title-schedule'></h1>\n            {renderTreatments(selectedDate)}\n        </article>\n        </>\n    )\n}\n\nexport default Week;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAAC;AAAA;AAEhD,MAAMC,IAAI,GAAEC,KAAK,IAAG;EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAE,EAAE,CAAC;EACjD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAE,IAAIU,IAAI,EAAE,CAACC,MAAM,EAAE,CAAC;EACtE,MAAMC,IAAI,GAAGV,mBAAmB,EAAE;EAClCH,SAAS,CAAC,MAAM;IACZ,MAAMc,MAAM,GAAGD,IAAI,EAAE;IACrB,IAAGC,MAAM,EAAE;MACPC,kBAAkB,CAACD,MAAM,CAAC;IAC9B;EACF,CAAC,EAAE,CAACR,KAAK,CAACU,QAAQ,EAAEV,KAAK,CAACW,IAAI,EAAEX,KAAK,CAAC,CAAC;EAEzC,MAAMS,kBAAkB,GAAG,MAAOD,MAAM,IAAK;IACzC,MAAMI,IAAI,GAAGd,cAAc,EAAE;IAC7B,MAAMG,UAAU,GAAG,EAAE;IACrB,KAAI,IAAIY,GAAG,IAAID,IAAI,EAAC;MAChB,MAAME,oBAAoB,CAACN,MAAM,CAACE,QAAQ,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;QACpEf,UAAU,CAACgB,IAAI,CAACD,QAAQ,CAAC;MAC7B,CAAC,CAAC;IACN;IACAd,aAAa,CAACD,UAAU,CAAC;EAC7B,CAAC;EAED,MAAMiB,kBAAkB,GAAIC,EAAE,IAAK;IAC/B,MAAMR,IAAI,GAAIQ,EAAE,CAACC,MAAM,CAACC,YAAY,CAAC,SAAS,CAAC;IAC/CjB,eAAe,CAACO,IAAI,CAAC;EACzB,CAAC;EAED,MAAMW,gBAAgB,GAAIT,GAAG,IAAK;IAAA;IAC9B,sBAAOZ,UAAU,CAACY,GAAG,GAAG,CAAC,CAAC,gDAAnB,YAAqBU,GAAG,CAAEC,SAAS,IAAK;MAC3C,oBACI;QAAS,SAAS,EAAC,cAAc;QAAA,wBAC7B;UAAG,SAAS,EAAC,MAAM;UAAA,UAAEA,SAAS,CAACb;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACxC;UAAG,SAAS,EAAC,MAAM;UAAA,UAAEa,SAAS,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACxC;UAAG,SAAS,EAAC,MAAM;UAAA,UAAED,SAAS,CAACE;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC;IAElB,CAAC,CAAC;EACN,CAAC;EACD,oBACI;IAAA,wBACA,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAQ,OAAO,EAAER,kBAAmB;QAAC,WAAQ,GAAG;QAAC,IAAI,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACvE;QAAQ,OAAO,EAAEA,kBAAmB;QAAC,WAAQ,GAAG;QAAC,IAAI,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACxE;QAAQ,OAAO,EAAEA,kBAAmB;QAAC,WAAQ,GAAG;QAAC,IAAI,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eAC3E;QAAQ,OAAO,EAAEA,kBAAmB;QAAC,WAAQ,GAAG;QAAC,IAAI,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACxE;QAAQ,OAAO,EAAEA,kBAAmB;QAAC,WAAQ,GAAG;QAAC,IAAI,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACvE,eACL;MAAS,SAAS,EAAC,cAAc;MAAA,wBAC9B;QAAI,SAAS,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAM,EACnCI,gBAAgB,CAACnB,YAAY,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA,gBACP;AAEX,CAAC;AAAA,GAtDKJ,IAAI;AAAA,KAAJA,IAAI;AAwDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}